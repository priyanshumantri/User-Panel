<% if(pageName==="freightInvoice" ) {%>
    <script>

        $("#kt_modal_2").on('shown.bs.modal', function () {
            $("#invoiceDate").flatpickr({
                dateFormat: "d-m-Y",
                minDate: new Date(new Date().getTime() - 5 * 24 * 60 * 60 * 1000), // 5 days ago
                maxDate: new Date(new Date().getTime() + 1 * 24 * 60 * 60 * 1000), // 1 day in the future
            });
        });

        setTimeout(() => {
            $("#selectLR").select2()
        }, 100)




    </script>
    <script>
        // Function to initialize DataTable
        function initializeDataTable() {
            // Set date data order
            const tableRows = table.querySelectorAll('tbody tr');

            tableRows.forEach(row => {
                const dateRow = row.querySelectorAll('td');
                const realDate = moment(dateRow[3].innerHTML, "DD MMM YYYY, LT").format(); // select date from 4th column in table
                dateRow[3].setAttribute('data-order', realDate);
            });

            // Init datatable --- more info on datatables: https://datatables.net/manual/
            datatable = $(table).DataTable({
                "info": false,
                'order': [],
                'pageLength': 10,
                'scrollX': true, // Set the height of the scrollable area (adjust as needed)
                'fixedColumns': {
                    leftColumns: 2, // Number of columns to freeze on the left
                },
            });

            // Hook export buttons
            const documentTitle = 'Challan Report';
            var buttons = new $.fn.dataTable.Buttons(table, {
                buttons: [
                    {
                        extend: 'copyHtml5',
                        title: documentTitle
                    },
                    {
                        extend: 'excelHtml5',
                        title: documentTitle
                    },
                    {
                        extend: 'csvHtml5',
                        title: documentTitle
                    }
                ]
            }).container().appendTo($('#kt_datatable_example_buttons'));

            // Hook dropdown menu click event to datatable export buttons
            const exportButtons = document.querySelectorAll('#kt_datatable_example_export_menu [data-kt-export]');
            exportButtons.forEach(exportButton => {
                exportButton.addEventListener('click', e => {
                    e.preventDefault();

                    // Get clicked export value
                    const exportValue = e.target.getAttribute('data-kt-export');
                    const target = document.querySelector('.dt-buttons .buttons-' + exportValue);

                    // Trigger click event on hidden datatable export buttons
                    target.click();
                });
            });

            // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()
            const filterSearch = document.querySelector('[data-kt-filter="search"]');
            filterSearch.addEventListener('keyup', function (e) {
                datatable.search(e.target.value).draw();
            });
        }

        // Initialize DataTable on document ready
        KTUtil.onDOMContentLoaded(function () {
            table = document.querySelector('#kt_datatable_example');
            if (table) {
                initializeDataTable();
            }
        });
    </script>
    <!--fetches all lr data from server-->
    <script>
        $("#billingParty").on("change", function () {
            getBillingLR($(this).val())
        })
    </script>
    <script>
        function getBillingLR(id) {
            fetch(`/transactions/accounts/freight-invoice/get-lr?id=${id}`, {
                method: "GET",
            }).then((res) => {
                return res.json().then((data) => {
                    $("#selectLR option:not(:first)").empty()
                    data.forEach((item) => {
                        $("#selectLR").append(`<option value="${item.id}">${item.lrNumber}</option>`)
                        $("#gstNumber").val(item.gst)
                    })
                    $("#selectLR").select2().prop("disabled", false)
                    setTimeout(function(){
                        $("#selectLR").focus()
                    }, 100)

                })
            })
        }
    </script>
    <script>
        function addNewInvoice() {
            $("#freightInvoiceForm").trigger("reset")
            $("#billNumber").prop("disabled", false)
            $("#billingParty").val("").prop("disabled", false).select2()
            $("#gstNumber").val("").prop("disabled", true)
            $("#selectLR").prop("disabled", true)
            const today = new Date();
            const day = today.getDate().toString().padStart(2, '0');
            const month = (today.getMonth() + 1).toString().padStart(2, '0');
            const year = today.getFullYear();
            
            const formattedDate = `${day}-${month}-${year}`;
            $("#invoiceDate").val(formattedDate);
            $("#title").text("Add New Invoice")
            $("#invoiceSubmit").prop("disabled", false).css("display", "block")
            $("#invoiceUpdate").css("display", "none").prop("disabled", true)
            $("#totalFreight").val(0)
            $("#netBillValue").val(0)
            $("#totalCollection").val(0)
            $("#totalDelivery").val(0)
            $("#totalLabour").val(0)
            $("#totalRebooking").val(0)
            $("#totalLoadingDetention").val(0)
            $("#totalUnloadingDetention").val(0)
            $("#totalDemmurage").val(0)
            $("#totalUnloading").val(0)
            $("#totalExtraWeight").val(0)
            $("#totalExtraHeight").val(0)
            $("#totalSt").val(0)
            $("#totalOthers").val(0)
            $("#totalCGST").val(0)
            $("#totalSGST").val(0)
            $("#totalIGST").val(0)

            $("#billingParty").prop("disabled", false).select2()
            $("#itemTableBody tr").empty()
           
            $("#selectLR").find("option:not(:first)").remove().end().select2().prop("disabled", true);

           
            $("#freightInvoice").DataTable().destroy()
            calculateTotal()
            $(document).ready(function () {
                $("#freightInvoice").DataTable({
                    'fixedColumns': {
                        leftColumns: 3, // Number of columns to freeze on the left
                    },
                    paging: false,
                    info: false
                })
            })
            
            setTimeout(function(){
                $("#billNumber").focus()
            }, 200)

           
        }
    </script>


    <!--fetches lr billing data from server-->
    <script>
        $("#selectLR").on("change", function () {
            $("#freightInvoice").DataTable().destroy()
            fetch(`/transactions/accounts/freight-invoice/get-lr-billing?id=${$(this).val()}`, {
                method: "GET",
            }).then((data) => {
                if (data.status === 400) {

                    return data.json().then((message) => {
                        Swal.fire({
                            text: message.message,
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        }).then((data) => {
                            if (data.isConfirmed) {
                                $("#challanSubmit").attr("data-kt-indicator", "off").prop("disabled", false)
                                $("#modalCloseBTN").prop("disabled", false)
                            }
                        })
                    })

                } else if (data.status === 200) {
                    return data.json().then((info) => {
                        var count = $('#itemTableBody tr').length;
                        const row = `
                    <tr id="${count + 1}">
                        <th class="text-white">
                            <button type="button" onclick="editLRFreight('${count + 1}', '${info.lrNumber}', '${info.total.qty}', '${info.total.actualWeight}', '${info.total. chargedWeight}', '${info.total.amount}')" class="btn btn-sm btn-icon btn-primary btn-active-light-primary">
                                                    <i class="ki-duotone ki-pencil fs-2">
                                                     <span class="path1"></span>
                                                     <span class="path2"></span>
                                                    </i>
                                                </button>
                                                <button type="button" onclick="deleteLR('${count+1}', '${info._id}' ,  '${info.lrNumber}')" class="btn btn-sm btn-icon btn-danger btn-active-light-danger">
                                                    <i class="ki-duotone ki-trash-square fs-2">
                                                     <span class="path1"></span>
                                                     <span class="path2"></span>
                                                     <span class="path3"></span>
                                                     <span class="path4"></span>
                                                    </i>
                                                </button>
                            </th>
                                                    <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${count + 1}" type="text" disabled class="srNumber">
                                                     </th>
                                                     <th class="text-white">
                                                        <input type="hidden" name="lrNumber" value="${info._id}" disabled class="lrId">
                                                        <input class="form-control form-control-solid" value="${info.lrNumber}" type="text" disabled class="lrNumber">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.date}" type="text" disabled class="date">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.from.cityName}" type="text" disabled class="from">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.to.cityName}" type="text" disabled class="to">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.total.qty}" type="text" disabled class="pkg">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.total.actualWeight}" type="text" disabled class="weight">
                                                     </th>
                                                 
                                                     <th class="text-white">
                                                        <input name="freight" class="form-control form-control-solid freight" value="${info.total.amount}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="collectionCharges" class="form-control form-control-solid collection" value="${info.freightDetails.collectionCharges}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="deliveryCharges" class="form-control form-control-solid delivery" value="${info.freightDetails.deliveryCharges}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="labourCharges" class="form-control form-control-solid labour" value="${info.freightDetails.labourCharges}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="rebookingCharges" class="form-control form-control-solid rebooking" value="${info.freightDetails.rebookingCharges}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="loadingDetention" class="form-control form-control-solid loading-detention" value="${info.freightDetails.loadingDetention}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="unloadingDetention" class="form-control form-control-solid unloading-detention" value="${info.freightDetails.unloadingDetention}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="demmurage" class="form-control form-control-solid demmurage" value="${info.freightDetails.demmurage}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="unloadingCharges" class="form-control form-control-solid unloading" value="${info.freightDetails.unloadingCharges}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="exWeight" class="form-control form-control-solid extra-weight" value="${info.freightDetails.exWeight}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="exHeight" class="form-control form-control-solid extra-height" value="${info.freightDetails.exHeight}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="stCharges" class="form-control form-control-solid st" value="${info.freightDetails.stCharges}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="others" class="form-control form-control-solid others" value="${info.freightDetails.others}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input type="hidden" class="taxation" disabled value="${info.gstPaidBy}">
                                                        <input name="CGST" class="form-control form-control-solid cgst" value="${info.freightDetails.CGST}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="SGST" class="form-control form-control-solid sgst" value="${info.freightDetails.SGST}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="IGST" class="form-control form-control-solid igst" value="${info.freightDetails.IGST}" type="text" disabled>
                                                     </th>
                                                     </tr>
                    `


                        $("#itemTableBody").append(row)
                        calculateTotal()
                        $("#selectLR option[value='" + info._id + "']").remove();
                        $("#selectLR").select2()
                        $("#billingParty").prop("disabled", true)
                      
                            
                     
                       setTimeout(function(){
                        $(document).ready(function () {
                            $("#freightInvoice").DataTable({
                                'fixedColumns': {
                                    leftColumns: 3, // Number of columns to freeze on the left
                                },
                                paging: false,
                                info: false
                            })
                        })
                       }, 200)

                    })
                } else if (data.status === 401) {
                    Swal.fire({
                        text: "You are not authorized to perform this action",
                        icon: "error",
                        buttonsStyling: !1,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn btn-primary"
                        }
                    }).then((data) => {
                        if (data.isConfirmed) {
                            $("#challanSubmit").attr("data-kt-indicator", "off").prop("disabled", false)
                            $("#modalCloseBTN").prop("disabled", false)
                        }
                    })
                } else if (data.status === 500) {
                    return data.json().then((message) => {
                        Swal.fire({
                            text: message.message,
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        }).then((data) => {
                            if (data.isConfirmed) {
                                location.reload()
                            }
                        })
                    })
                }
            })
        })
    </script>


    <script>
        //edit button for lr freight
        function editLRFreight(trID, lrNumber, qty, actualWeight, chargedWeight) {
            $("#editFreightTitle").text(`Edit Freight In LR No. ${lrNumber}`)
            $("#trID").val(trID)    
            $("#qty").val(qty)
            $("#actualWeight").val(actualWeight)
            $("#chargedWeight").val(chargedWeight)
            $("#freight").val($(`#${trID}`).find(".freight").val())
            $("#collection").val($(`#${trID}`).find(".collection").val())
            $("#labour").val($(`#${trID}`).find(".labour").val())
            $("#delivery").val($(`#${trID}`).find(".delivery").val())
            $("#rebooking").val($(`#${trID}`).find(".rebooking").val())
            $("#loadingDetention").val($(`#${trID}`).find(".loading-detention").val())
            $("#unloadingDetention").val($(`#${trID}`).find(".unloading-detention").val())
            $("#demmurage").val($(`#${trID}`).find(".demmurage").val())
            $("#unloadingCharges").val($(`#${trID}`).find(".unloading").val())
            $("#extraWeight").val($(`#${trID}`).find(".extra-weight").val())
            $("#extraHeight").val($(`#${trID}`).find(".extra-height").val())
            $("#stCharges").val($(`#${trID}`).find(".st").val())
            $("#others").val($(`#${trID}`).find(".others").val())
            $("#kt_modal_stacked_2").modal("show")
        }
        //action on selecting rate on
        $("#rateON").on("change", function(){
            $("#rate").prop("disabled", false)
            $("#rate").val(0)
            $("#freight").val(0)
            setTimeout(function(){
                $("#rate").focus()
            }, 100)
        })

        $("#rate").on("input", function(){
            if($("#rateON").val() === "actualWeight") {
                const freight = $(this).val() * parseFloat($("#actualWeight").val())
                $("#freight").val(freight)
            } else if($("#rateON").val() === "chargedWeight") {
                const freight = $(this).val() * parseFloat($("#chargedWeight").val())
                $("#freight").val(freight)
            } else if($("#rateON").val() === "pkg") {
                const freight = $(this).val() * parseFloat($("#qty").val())
                $("#freight").val(freight)
            } else if($("#rateON").val() === "ftl") {
                const freight = $(this).val()
                $("#freight").val(freight)
            }
        })
    </script>

    <script>
        function saveLRFreight() {
            const trID = $("#trID").val()
            $(`#${trID}`).find(".freight").val($("#freight").val())
            $(`#${trID}`).find(".collection").val($("#collection").val())   
            $(`#${trID}`).find(".delivery").val($("#delivery").val())
            $(`#${trID}`).find(".labour").val($("#labour").val())
            $(`#${trID}`).find(".rebooking").val($("#rebooking").val())
            $(`#${trID}`).find(".loading-detention").val($("#loadingDetention").val())
            $(`#${trID}`).find(".unloading-detention").val($("#unloadingDetention").val())
            $(`#${trID}`).find(".demmurage").val($("#demmurage").val())
            $(`#${trID}`).find(".unloading").val($("#unloadingCharges").val())
            $(`#${trID}`).find(".extra-weight").val($("#extraWeight").val())
            $(`#${trID}`).find(".extra-height").val($("#extraHeight").val())
            $(`#${trID}`).find(".st").val($("#stCharges").val())
            $(`#${trID}`).find(".others").val($("#others").val())

            if($(`#${trID}`).find(".taxation").val() == "transporter") {
                
                const totalLRFreight = parseFloat($(`#${trID}`).find(".freight").val()) + parseFloat($(`#${trID}`).find(".collection").val()) + parseFloat($(`#${trID}`).find(".delivery").val()) + parseFloat($(`#${trID}`).find(".labour").val()) + parseFloat($(`#${trID}`).find(".rebooking").val()) + parseFloat($(`#${trID}`).find(".loading-detention").val()) + parseFloat($(`#${trID}`).find(".unloading-detention").val()) + parseFloat($(`#${trID}`).find(".demmurage").val()) + parseFloat($(`#${trID}`).find(".unloading").val()) + parseFloat($(`#${trID}`).find(".extra-weight").val()) + parseFloat($(`#${trID}`).find(".extra-height").val()) + parseFloat($(`#${trID}`).find(".st").val()) + parseFloat($(`#${trID}`).find(".others").val())
                
                const CGST = (totalLRFreight * 2.5) / 100
                const SGST = (totalLRFreight * 2.5) / 100
                const IGST = 0
                
                $(`#${trID}`).find(".cgst").val(CGST)
                $(`#${trID}`).find(".sgst").val(SGST)
                $(`#${trID}`).find(".igst").val(IGST)
            }  else {
                $(`#${trID}`).find(".cgst").val(0)
                $(`#${trID}`).find(".sgst").val(0)
                $(`#${trID}`).find(".igst").val(0)
            }
            $(`#${trID}`).find(".CGST").val($("#CGST").val())
            $(`#${trID}`).find(".SGST").val($("#SGST").val())
            $(`#${trID}`).find(".IGST").val($("#IGST").val())
            calculateTotal()
            $("#kt_modal_stacked_2").modal("hide")
        }
    </script>

    <script>
        function deleteLR(trID, id, lrNumber) {
            $("#freightInvoice").DataTable().destroy()
            $(`#${trID}`).remove()
            setTimeout(function(){
                        $(document).ready(function () {
                            $("#freightInvoice").DataTable({
                                'fixedColumns': {
                                    leftColumns: 3, // Number of columns to freeze on the left
                                },
                                paging: false,
                                info: false
                            })
                        })
                       }, 200)

                       const newOption = `<option value="${id}">${lrNumber}</option>`
                       $("#selectLR").append(newOption).select2()
            calculateTotal()
        }
    </script>

    <!--this function calculates all charges-->
    <script>
        function calculateTotal() {
            //calculates total freight
            var totalFreight = 0;
            if($("#itemTableBody tr").length < 0) {
                $("#totalFreight").val(0)
                $("#totalCollection").val(0)
                $("#totalDelivery").val(0)
                $("#totalLabour").val(0)
                $("#totalRebooking").val(0)
                $("#totalLoadingDetention").val(0)
                $("#totalUnloadingDetention").val(0)
                $("#totalDemmurage").val(0)
                $("#totalUnloading").val(0)
                $("#totalExtraWeight").val(0)
                $("#totalExtraHeight").val(0)
                $("#totalSt").val(0)
                $("#totalOthers").val(0)
                $("#totalCGST").val(0)
                $("#totalSGST").val(0)
                $("#totalIGST").val(0)
                $("#netBillValue").val(0)

            } 
            $(".freight").each(function () {

                
                var freightValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalFreight += freightValue;
            });

            $("#totalFreight").val(totalFreight);

            //calculates total collection
            var totalCollection = 0;
            $(".collection").each(function () {
                var collectionValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalCollection += collectionValue;
            });
            $("#totalCollection").val(totalCollection);

            //calculates total delivery
            var totalDelivery = 0;
            $(".delivery").each(function () {
                var deliveryValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalDelivery += deliveryValue;
            });
            $("#totalDelivery").val(totalDelivery);

            //calculates total labour
            var totalLabour = 0;
            $(".labour").each(function () {
                var labourValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalLabour += labourValue;
            });
            $("#totalLabour").val(totalLabour);

            //calculates total rebooking
            var totalRebooking = 0;
            $(".rebooking").each(function () {
                var rebookingValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalRebooking += rebookingValue;
            });
            $("#totalRebooking").val(totalRebooking);

            //calculates total loading detention
            var totalLoadingDetention = 0;
            $(".loading-detention").each(function () {
                var loadingDetentionValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalLoadingDetention += loadingDetentionValue;
            });
            $("#totalLoadingDetention").val(totalLoadingDetention);

            //calculates total unloading detention
            var totalUnloadingDetention = 0;
            $(".unloading-detention").each(function () {
                var unloadingDetentionValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalUnloadingDetention += unloadingDetentionValue;
            });
            $("#totalUnloadingDetention").val(totalUnloadingDetention);

            //calculates total demmurage
            var totalDemmurage = 0;
            $(".demmurage").each(function () {
                var demmurageValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalDemmurage += demmurageValue;
            });
            $("#totalDemmurage").val(totalDemmurage);

            //calculates total unloading
            var totalUnloading = 0;
            $(".unloading").each(function () {
                var unloadingValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalUnloading += unloadingValue;
            });
            $("#totalUnloading").val(totalUnloading);

            //calculates total extra weight
            var totalExtraWeight = 0;
            $(".extra-weight").each(function () {
                var extraWeightValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalExtraWeight += extraWeightValue;
            });
            $("#totalExtraWeight").val(totalExtraWeight);

            //calculates total extra height
            var totalExtraHeight = 0;
            $(".extra-height").each(function () {
                var extraHeightValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalExtraHeight += extraHeightValue;
            });
            $("#totalExtraHeight").val(totalExtraHeight);

            //calculates total st
            var totalSt = 0;
            $(".st").each(function () {
                var stValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalSt += stValue;
            });
            $("#totalSt").val(totalSt);

            //calculates total others
            var totalOthers = 0;
            $(".others").each(function () {
                var othersValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalOthers += othersValue;
            });
            $("#totalOthers").val(totalOthers);



            //calculates total CGST, SGST, IGST
            var totalCGST = 0;
            $(".cgst").each(function () {
                var cgstValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalCGST += cgstValue;
            });

            $("#totalCGST").val(totalCGST)

            var totalSGST = 0;
            $(".sgst").each(function () {
                var sgstValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalSGST += sgstValue;
            });

            $("#totalSGST").val(totalSGST)

            var totalIGST = 0;
            $(".igst").each(function () {
                var igstValue = parseFloat($(this).val()) || 0; // Convert to number or use 0 if NaN
                totalIGST += igstValue;
            });

            $("#totalIGST").val(totalIGST)

            //calculates net bill value
            const netBillValue = totalFreight + totalCollection + totalDelivery + totalLabour + totalRebooking + totalLoadingDetention + totalUnloadingDetention + totalDemmurage + totalUnloading + totalExtraWeight + totalExtraHeight + totalSt + totalOthers + totalCGST + totalSGST + totalIGST
            $("#netBillValue").val(netBillValue)
        }
    </script>
    <script>    
          function createFreightInvoice() {
            const freightElement = document.querySelectorAll(".freight")
            const collectionElement = document.querySelectorAll(".collection")
            const deliveryElement = document.querySelectorAll(".delivery")
            const labourElement = document.querySelectorAll(".labour")
            const rebookingElement = document.querySelectorAll(".rebooking")
            const loadingDetentionElement = document.querySelectorAll(".loading-detention")
            const unloadingDetentionElement = document.querySelectorAll(".unloading-detention")
            const demmurageElement = document.querySelectorAll(".demmurage")
            const unloadingElement = document.querySelectorAll(".unloading")
            const extraWeightElement = document.querySelectorAll(".extra-weight")
            const extraHeightElement = document.querySelectorAll(".extra-height")
            const stElement = document.querySelectorAll(".st")
            const othersElement = document.querySelectorAll(".others")
        if($("#billNumber").val() === "") {
            showError("Please Enter Bill No.")
        } else if($("#invoiceDate").val() === ""){
            showError("Please Select Bill Date")
        } else if($("#billingParty").val() === "") {
            showError("Please Select Billing Party")
        } else if(freightElement.length === 0 || collectionElement.length === 0 || deliveryElement.length === 0 || labourElement.length === 0 || rebookingElement.length === 0 || loadingDetentionElement.length === 0 || unloadingDetentionElement.length === 0 || demmurageElement.length === 0 || unloadingElement.length === 0 || extraWeightElement.length === 0 || extraHeightElement.length === 0 || stElement.length === 0 || othersElement.length === 0) {
            showError("Please Add atleast 1 LR")
        } else {
                            $("#invoiceSubmit").attr("data-kt-indicator", "on").prop("disabled", true);
                            $("#modalCloseBTN").prop("disabled", true);
                                const form = document.getElementById("freightInvoiceForm");

                                // Enable disabled inputs and selects
                                const disabledInputs = form.querySelectorAll("input[disabled], select[disabled]");
                                for (const input of disabledInputs) {
                                    input.removeAttribute("disabled");
                                }

                                // Serialize the form data
                                const formData = new FormData(form);

                                // Re-disable previously disabled inputs and selects
                                for (const input of disabledInputs) {
                                    input.setAttribute("disabled", "disabled");
                                }

                                // Create a URLSearchParams object and add form data to it
                                const data = new URLSearchParams();
                                for (const pair of formData) {
                                    data.append(pair[0], pair[1]);
                                }

                    fetch("/transactions/accounts/freight-invoice/new", {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: data
                    }).then((data) => {
                        if (data.status === 400) {

                            return data.json().then((message) => {
                                Swal.fire({
                                    text: message.message,
                                    icon: "error",
                                    buttonsStyling: !1,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((response) => {
                                    if (response.isConfirmed) {
                                     $("#newLedgerBTN").attr("data-kt-indicator", "off")
                                        $("#newLedgerBTN").attr("disabled", false)
                                    }
                                })
                            })

                        } else if (data.status === 200) {
                            Swal.fire({
                                text: "Freight Invoice Created",
                                icon: "success",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            }).then((response) => {
                                if (response.isConfirmed) {
                                    location.reload()
                                }
                            })
                        } else if (data.status === 401) {
                            Swal.fire({
                                text: "You are not authorized to perform this action",
                                icon: "error",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            }).then((data) => {
                                if (data.isConfirmed) {
                                 $("#newLedgerBTN").attr("data-kt-indicator", "off")
                                    $("#newLedgerBTN").attr("disabled", false)
                                    
                                }
                            })
                        }
                    })
        }
          }
                  
    </script>

    <script>
        function editFreightInvoice(id) {
            $("#itemTableBody").empty()
            $("#freightInvoice").DataTable().destroy()
            fetch(`/transactions/accounts/freight-invoice/edit?id=${id}`, {
                method : "GET"
            }).then((res)=>{
                return res.json().then((data)=>{
                    $("#editID").val(data._id)
                    $("#title").text(`Edit Invoice - ${data.billNumber}`)
                    $("#invoiceDate").val(data.date)
                    $("#billNumber").prop("disabled", true).val(data.billNumber)
                    $("#billingParty").val(data.ledger._id).select2()
                    $("#gstNumber").val(data.ledger.taxation.GST).prop("disabled", true)


                   
                    for(i=0; i<data.lr.length; i++) {
                        addInvoiceRow(i, data.lr[i])
                     }

                     getBillingLR(data.ledger._id)
                 
                        $(document).ready(function () {
                            $("#freightInvoice").DataTable({
                                'fixedColumns': {
                                    leftColumns: 3, // Number of columns to freeze on the left
                                },
                                paging: false,
                                info: false
                            })
                        })
                
                       calculateTotal()
                       $("#invoiceSubmit").prop("disabled", true).css("display", "none")
                       $("#invoiceUpdate").css("display", "block").prop("disabled", false)
                    $("#kt_modal_2").modal("show")

                })
            })
        }
    </script>

    <script>
        function addInvoiceRow(count, data) {
            const info = data.lrNumber
            const row = `
                    <tr id="${count + 1}">
                        <th class="text-white">
                            <button type="button" onclick="editLRFreight('${count + 1}', '${info.lrNumber}', '${info.total.qty}', '${info.total.actualWeight}', '${info.total. chargedWeight}', '${info.total.amount}')" class="btn btn-sm btn-icon btn-primary btn-active-light-primary">
                                                    <i class="ki-duotone ki-pencil fs-2">
                                                     <span class="path1"></span>
                                                     <span class="path2"></span>
                                                    </i>
                                                </button>
                                                <button type="button" onclick="deleteLR('${count+1}', '${info._id}' ,  '${info.lrNumber}')" class="btn btn-sm btn-icon btn-danger btn-active-light-danger">
                                                    <i class="ki-duotone ki-trash-square fs-2">
                                                     <span class="path1"></span>
                                                     <span class="path2"></span>
                                                     <span class="path3"></span>
                                                     <span class="path4"></span>
                                                    </i>
                                                </button>
                            </th>
                                                    <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${count + 1}" type="text" disabled class="srNumber">
                                                     </th>
                                                     <th class="text-white">
                                                        <input type="hidden" name="lrNumber" value="${info._id}" disabled class="lrId">
                                                        <input class="form-control form-control-solid" value="${info.lrNumber}" type="text" disabled class="lrNumber">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.date}" type="text" disabled class="date">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.from.cityName}" type="text" disabled class="from">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.to.cityName}" type="text" disabled class="to">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.total.qty}" type="text" disabled class="pkg">
                                                     </th>
                                                     <th class="text-white">
                                                        <input class="form-control form-control-solid" value="${info.total.actualWeight}" type="text" disabled class="weight">
                                                     </th>
                                                 
                                                     <th class="text-white">
                                                        <input name="freight" class="form-control form-control-solid freight" value="${data.freight}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="collectionCharges" class="form-control form-control-solid collection" value="${data.collectionCharges}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="deliveryCharges" class="form-control form-control-solid delivery" value="${data.delivery}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="labourCharges" class="form-control form-control-solid labour" value="${data.labour}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="rebookingCharges" class="form-control form-control-solid rebooking" value="${data.rebooking}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="loadingDetention" class="form-control form-control-solid loading-detention" value="${data.loadingDetention}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="unloadingDetention" class="form-control form-control-solid unloading-detention" value="${info.freightDetails.unloadingDetention}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="demmurage" class="form-control form-control-solid demmurage" value="${data.demmurage}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="unloadingCharges" class="form-control form-control-solid unloading" value="${data.unloading}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="exWeight" class="form-control form-control-solid extra-weight" value="${data.exWeight}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="exHeight" class="form-control form-control-solid extra-height" value="${data.exHeight}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="stCharges" class="form-control form-control-solid st" value="${data.st}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="others" class="form-control form-control-solid others" value="${data.others}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input type="hidden" class="taxation" disabled value="${info.gstPaidBy}">
                                                        <input name="CGST" class="form-control form-control-solid cgst" value="${data.cgst}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="SGST" class="form-control form-control-solid sgst" value="${data.sgst}" type="text" disabled>
                                                     </th>
                                                     <th class="text-white">
                                                        <input name="IGST" class="form-control form-control-solid igst" value="${data.igst}" type="text" disabled>
                                                     </th>
                                                     </tr>
                    `


                        $("#itemTableBody").append(row)
        }
    </script>

    <script>
        function updateInvoice() {
                            $("#invoiceUpdate").attr("data-kt-indicator", "on").prop("disabled", true);
                            $("#modalCloseBTN").prop("disabled", true);
                                const form = document.getElementById("freightInvoiceForm");

                                // Enable disabled inputs and selects
                                const disabledInputs = form.querySelectorAll("input[disabled], select[disabled]");
                                for (const input of disabledInputs) {
                                    input.removeAttribute("disabled");
                                }

                                // Serialize the form data
                                const formData = new FormData(form);

                                // Re-disable previously disabled inputs and selects
                                for (const input of disabledInputs) {
                                    input.setAttribute("disabled", "disabled");
                                }

                                // Create a URLSearchParams object and add form data to it
                                const data = new URLSearchParams();
                                for (const pair of formData) {
                                    data.append(pair[0], pair[1]);
                                }

                        fetch("/transactions/accounts/freight-invoice/edit", {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: data
                    }).then((data) => {
                        if (data.status === 400) {

                            return data.json().then((message) => {
                                Swal.fire({
                                    text: message.message,
                                    icon: "error",
                                    buttonsStyling: !1,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then((response) => {
                                    if (response.isConfirmed) {
                                     $("#newLedgerBTN").attr("data-kt-indicator", "off")
                                        $("#newLedgerBTN").attr("disabled", false)
                                    }
                                })
                            })

                        } else if (data.status === 200) {
                            Swal.fire({
                                text: "Invoice Updated Successfully",
                                icon: "success",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            }).then((response) => {
                                if (response.isConfirmed) {
                                    location.reload()
                                }
                            })
                        } else if (data.status === 401) {
                            Swal.fire({
                                text: "You are not authorized to perform this action",
                                icon: "error",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            }).then((data) => {
                                if (data.isConfirmed) {
                                 $("#newLedgerBTN").attr("data-kt-indicator", "off")
                                    $("#newLedgerBTN").attr("disabled", false)
                                    
                                }
                            })
                        }
                    })
        }
    </script>

    <script>
        function deleteFreightInvoice(id) {
            Swal.fire({
            text: "Are you sure you want to delete this Invoice?",
            icon: "warning",
            showCancelButton: !0,
            buttonsStyling: !1,
            confirmButtonText: "Yes, delete!",
            cancelButtonText: "No, cancel",
            customClass: {
                confirmButton: "btn fw-bold btn-danger",
                cancelButton: "btn fw-bold btn-active-light-primary"
            }
        }).then(response => {
            if (response.isConfirmed) {
                // Send the form data to the server

                fetch(`/transactions/accounts/freight-invoice/delete?id=${id}`, {
                    method: "GET"
                }).then((data) => {
                    if (data.status === 400) {

                        return data.json().then((message) => {
                            Swal.fire({
                                text: message.message,
                                icon: "error",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            })
                        })

                    } else if (data.status === 200) {
                        Swal.fire({
                            text: "Freight Invoice Deleted Successfully",
                            icon: "success",
                            buttonsStyling: !1,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        }).then((response) => {
                            if (response.isConfirmed) {
                                location.reload()
                            }
                        })
                    } else if (data.status === 401) {
                        Swal.fire({
                            text: "You are not authorized to perform this action",
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn btn-primary"
                            }
                        }).then((data) => {
                            if (data.isConfirmed) {
                                i.setAttribute("data-kt-indicator", "off")
                                i.disabled = 0
                                n.hide()
                                e.reset()
                            }
                        })
                    }
                })
            }
        })

        }
    </script>

    <script>
        function downloadFreightInvoice(id) {
            window.open(`/transactions/accounts/freight-invoice/download?id=${id}`, "_blank")
        }
    </script>
    <%} %>